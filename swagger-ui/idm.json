{
    "openapi": "3.0.1",
    "info": {
      "title": "IDM REST API",
      "version": "2023.07.01-01"
    },
    "servers": [
      {
        "url": "https://mingle-ionapi.inforcloudsuite.com/DEVMRKT_DEV/IDM/api",
        "variables": {
          "basePath": {
            "default": "/DEVMRKT_DEV/IDM/api"
          }
        }
      }
    ],
    "security":[
      {
          "noscope_auth":[]
      }
    ],
    "tags": [
      {
        "name": "Business Context"
      },
      {
        "name": "Configuration"
      },
      {
        "name": "Connection"
      },
      {
        "name": "Datamodel"
      },
      {
        "name": "Document Output"
      },
      {
        "name": "Email"
      },
      {
        "name": "Items"
      },
      {
        "name": "Signature V1"
      },
      {
        "name": "Templates"
      },
      {
        "name": "User Analytics"
      }
    ],
    "paths": {
      "/bc": {
        "post": {
          "tags": [
            "Business Context"
          ],
          "summary": "Add an item",
          "description": "Adds an item to the content repository. Returns a document containing the newly added item. If the \"checkout\" parameter is set to \"true\" the new item left in a checked out (locked) state.",
          "operationId": "addItemApi",
          "parameters": [
            {
              "name": "$checkout",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input document.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AddItem"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddItem"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/bc/count": {
        "post": {
          "tags": [
            "Business Context"
          ],
          "summary": "Returns the number of items in the search result based on Business context message.",
          "description": "Returns a string containing the number of items in the search result. An example of a query is /MDS_File[@MDS_Name=\"MyName\"] which returns the items named \"MyName\" of the document type \"MDS_Image\".",
          "operationId": "searchCount",
          "parameters": [
            {
              "name": "$entity",
              "in": "query",
              "description": "EntityName parameter",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted)",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input query.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BCData"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/bc/entities": {
        "post": {
          "tags": [
            "Business Context"
          ],
          "summary": "Returns entities",
          "description": "Returns a document containing a collection of entities based on Business context message.",
          "operationId": "getEntities",
          "parameters": [
            {
              "name": "$entity",
              "in": "query",
              "description": "EntityName parameter",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en-US'.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$includeReadOnly",
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "requestBody": {
            "description": "Input business context message.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BCData"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/bc/models": {
        "get": {
          "tags": [
            "Business Context"
          ],
          "summary": "Returns all BusinessContextModels",
          "description": "Returns a document containing all the current business context models",
          "operationId": "getModelsApi",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/bc/models/model": {
        "get": {
          "tags": [
            "Business Context"
          ],
          "summary": "Returns a BusinessContextModel object",
          "description": "Returns a document containing a specific BusinessContextModel using the key 'entity:product:screen:docType', also fall backs to a ''(empty string) key in order to support previous versions of the api.",
          "operationId": "getModelApi",
          "parameters": [
            {
              "name": "$entity",
              "in": "query",
              "description": "EntityName parameter",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$product",
              "in": "query",
              "description": "ProductId parameter",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$screen",
              "in": "query",
              "description": "ScreenId parameter",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$docType",
              "in": "query",
              "description": "Document type parameter",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/bc/search": {
        "post": {
          "tags": [
            "Business Context"
          ],
          "summary": "Search for items",
          "description": "Returns a document containing the items matching the Business context message.",
          "operationId": "searchItems",
          "parameters": [
            {
              "name": "$offset",
              "in": "query",
              "description": "Start index of the search. Use 0 for the first item.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$limit",
              "in": "query",
              "description": "The maximum number of returned items. Must be between 1 and 1000.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$includeCount",
              "in": "query",
              "description": "If a search count should be included in the result, including a count may result that the operation takes longer time to execute",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$entity",
              "in": "query",
              "description": "EntityName parameter",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted)",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input query.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BCData"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/bc/{doctype}/attributeOrder": {
        "get": {
          "tags": [
            "Business Context"
          ],
          "summary": "Retrieve an attribute order.",
          "description": "Returns a model of attribute order related to the given document type.",
          "operationId": "retrieveAttributeOrder",
          "parameters": [
            {
              "name": "doctype",
              "in": "path",
              "description": "Document type whos AttributeOrder is to be read from IDM.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$privateSpaceName",
              "in": "query",
              "description": "The private space name of the entity",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/bc/{pid}/relatedDocuments": {
        "get": {
          "tags": [
            "Business Context"
          ],
          "summary": "Retrieve all related documents for a given pid",
          "description": "Returns a document containing the related document items for a given pid.",
          "operationId": "retrieveRelatedDocuments",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "onlyAssemblable",
              "in": "query",
              "description": "Only assemblable mimetypes",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/bc/{pid}/resource": {
        "put": {
          "tags": [
            "Business Context"
          ],
          "summary": "Update an item resource",
          "description": "Updates the specified item resource in the content repository. For uploading large files this Api should be used. The text content of the file (if any) will not be text searchable when this Api is used. If the content repository supports versioning and the revisioning policy for this entity is turned on, the update will result in a new version being created. If \"checkout\" is set to \"true\" the item is checked out before the update automatically (if not already checked out) and if \"checkin\" is set to \"true\" the item is checked in after the update. Returns a document containing the updated item.",
          "operationId": "updateItemStreaming",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$checkout",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$checkin",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$filename",
              "in": "query",
              "description": "The filename.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input resource file.",
            "content": {
              "application/octet-stream;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/InputStream"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/bc/{pid}/resource/stream": {
        "get": {
          "tags": [
            "Business Context"
          ],
          "summary": "Retrieves an item's main resource file",
          "description": "Returns the specified item's main resource file as a stream.",
          "operationId": "retrieveMainResourceFile",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/bc/{pid}/resource/{conversion}/stream": {
        "get": {
          "tags": [
            "Business Context"
          ],
          "summary": "Retrieves an item's resource file based on conversion name",
          "description": "Returns an item conversion resource file as a stream.",
          "operationId": "retrieveResourceFile",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "conversion",
              "in": "path",
              "description": "Name of the coversion type, such as \"Thumbnail\" or \"Preview\".",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/config/importConfiguration": {
        "post": {
          "tags": [
            "Configuration"
          ],
          "summary": "Imports a configuration",
          "description": "Import a configuration document.",
          "operationId": "importConfiguration",
          "parameters": [
            {
              "name": "$tenants",
              "in": "query",
              "description": "One or more tenants (comma separated), this can only be used when connecting through Authorization Service with the permission \"provision\"",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input document.",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/config/resultlists": {
        "get": {
          "tags": [
            "Configuration"
          ],
          "summary": "Returns the result list document",
          "description": "Returns a document containing the result list.",
          "operationId": "getResultListsApi",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/config/resultlists/resultlist/{name}": {
        "get": {
          "tags": [
            "Configuration"
          ],
          "summary": "Returns the result list document",
          "description": "Returns a document containing the result list.",
          "operationId": "getResultListApi",
          "parameters": [
            {
              "name": "name",
              "in": "path",
              "description": "DocumentType parameter",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/connection/login": {
        "get": {
          "tags": [
            "Connection"
          ],
          "summary": "Login",
          "description": "Creates a connection to the content repository.",
          "operationId": "loginApi",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/connection/logout": {
        "get": {
          "tags": [
            "Connection"
          ],
          "summary": "Logout",
          "description": "Disconnects the connection to the content repository.",
          "operationId": "logout",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/connection/properties": {
        "get": {
          "tags": [
            "Connection"
          ],
          "summary": "Returns all properties",
          "description": "Returns a document containing a collection of all content repository properties.",
          "operationId": "getPropertiesApi",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/connection/properties/{property}": {
        "get": {
          "tags": [
            "Connection"
          ],
          "summary": "Returns a property",
          "description": "Returns a document containing a specified property.",
          "operationId": "getProperty",
          "parameters": [
            {
              "name": "property",
              "in": "path",
              "description": "Name of the property.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/connection/transaction/commit": {
        "get": {
          "tags": [
            "Connection"
          ],
          "operationId": "commitTransaction",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "deprecated": true
        }
      },
      "/connection/transaction/rollback": {
        "get": {
          "tags": [
            "Connection"
          ],
          "operationId": "rollbackTransaction",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "deprecated": true
        }
      },
      "/connection/transaction/start": {
        "get": {
          "tags": [
            "Connection"
          ],
          "operationId": "startTransaction",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "deprecated": true
        }
      },
      "/connection/validate": {
        "get": {
          "tags": [
            "Connection"
          ],
          "summary": "Validate",
          "description": "Validates the current connection to the content repository. This operation can be used to create heartbeat functionality.",
          "operationId": "validateConnectionApi",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/datamodel/entities": {
        "get": {
          "tags": [
            "Datamodel"
          ],
          "summary": "Returns all entities",
          "description": "Returns a document containing a collection of all entities.",
          "operationId": "getUserEntitiesApi",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en-US'.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "timestamp",
              "in": "query",
              "description": "Timestamp parameter",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tenant",
              "in": "query",
              "description": "Tenant ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/datamodel/entities/classification/{classification}": {
        "get": {
          "tags": [
            "Datamodel"
          ],
          "summary": "Returns all entities for a given classification",
          "description": "Returns a document containing a collection of all entities for a given classification.",
          "operationId": "getEntitiesByClassificationApi",
          "parameters": [
            {
              "name": "classification",
              "in": "path",
              "description": "Classification parameter.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en-US'.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "timestamp",
              "in": "query",
              "description": "Timestamp parameter",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tenant",
              "in": "query",
              "description": "Tenant ID",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/datamodel/entities/{name}": {
        "get": {
          "tags": [
            "Datamodel"
          ],
          "summary": "Returns an entity",
          "description": "Returns a document containing the entity data for the specified entity name.",
          "operationId": "getEntityApi",
          "parameters": [
            {
              "name": "name",
              "in": "path",
              "description": "Name of the entity.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en-US'.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/datamodel/entities/{name}/templates": {
        "get": {
          "tags": [
            "Datamodel"
          ],
          "summary": "Returns the templates for an entity",
          "description": "Returns all item templates for the entity.",
          "operationId": "listTemplatesApi",
          "parameters": [
            {
              "name": "name",
              "in": "path",
              "description": "Name of the entity.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/distribution/v1/batchStatus/{batchId}": {
        "get": {
          "tags": [
            "Document Output"
          ],
          "summary": "Document Output",
          "description": "Get status for all jobs with the same batch id. See Java Doc for more details.",
          "operationId": "batchStatus",
          "parameters": [
            {
              "name": "batchId",
              "in": "path",
              "description": "Batch Id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "extendedInfo",
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/distribution/v1/printer/search/gcp": {
        "get": {
          "tags": [
            "Document Output"
          ],
          "summary": "Document Output",
          "description": "Get list of gcp printers.",
          "operationId": "getGCPPrinters",
          "parameters": [
            {
              "name": "q",
              "in": "query",
              "description": "q",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/distribution/v1/status": {
        "post": {
          "tags": [
            "Document Output"
          ],
          "summary": "Document Output",
          "description": "Get status for a submitted job.",
          "operationId": "statusList",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/distribution/v1/status/item/{pid}": {
        "get": {
          "tags": [
            "Document Output"
          ],
          "summary": "Distribution",
          "description": "Get status for a submitted job by Document PID. See Java Doc for more details.",
          "operationId": "statusItem",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "Document PID.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/distribution/v1/status/{jobid}": {
        "get": {
          "tags": [
            "Document Output"
          ],
          "summary": "Document Output",
          "description": "Get status for a submitted job by Job ID. See Java Doc for more details.",
          "operationId": "status",
          "parameters": [
            {
              "name": "jobid",
              "in": "path",
              "description": "Job Id.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/distribution/v1/submit": {
        "post": {
          "tags": [
            "Document Output"
          ],
          "summary": "Document Output",
          "description": "With Document Output it is possible to generate pdf files or Word files from Word templates and distribute to different targets (e-mail, print or idm). It is also possible to merge documents into one pdf or to a Word file if all documents are Word files. For example if generating one document and there is a need to add some shared legal pages at the end (or the beginning) of the document.\n\nEven if Document Output have focused a lot of generating new pdf or Word files, Document Output can be used to just send e-mail or print documents, both existing documents in IDM and document send in to Document Output.\n\nDocument Output can also be used for creating and sending e-mails with an HTML body. See Java Doc for more details on how to construct the payload.",
          "operationId": "submit",
          "parameters": [
            {
              "name": "extendedInfo",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "description": "Input document.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitJob"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/distribution/v1/terminate": {
        "post": {
          "tags": [
            "Document Output"
          ],
          "summary": "Document Output",
          "description": "Terminate jobs with the specified batchIds or jobIds.",
          "operationId": "terminateJobs",
          "parameters": [
            {
              "name": "usingBatchIds",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "description": "Input ids.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/email": {
        "post": {
          "tags": [
            "Email"
          ],
          "summary": "Send Email Message",
          "description": "Sends Email with attachment.",
          "operationId": "sendEmailMessage",
          "parameters": [
            {
              "name": "$useDefaultFromAddress",
              "in": "query",
              "description": "Email parameter, to use default enviroment configured email or logged-in user email. true for default enviroment",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Model of request body with necessary data for send E-Mail message.",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EmailMessage"
                }
              },
              "application/xml;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/EmailMessage"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/email/templates": {
        "get": {
          "tags": [
            "Email"
          ],
          "summary": "Retrieve list of template names",
          "description": "Retrieve list of template names",
          "operationId": "getTemplates",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items": {
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Add an item",
          "description": "Adds an item to the content repository. Returns a document containing the newly added item. If the \"checkout\" parameter is set to \"true\" the new item left in a checked out (locked) state.",
          "operationId": "addItemApi2",
          "parameters": [
            {
              "name": "$checkout",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input document.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AddItem"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddItem"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/batch": {
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Execute one or more batch operations",
          "description": "Returns the output for each batch operation. The operations are returned in the same order as they were sent to the api.",
          "operationId": "batchOperationsApi",
          "parameters": [
            {
              "name": "$useTransaction",
              "in": "query",
              "description": "If a transaction should be used (if supported by the backend).",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$throwOnException",
              "in": "query",
              "description": "If an exception should be thrown on the first exception, if \"useTransaction\" is true then the execution will always stop when the exception occurs.",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input batch operations.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BatchOperations"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BatchOperations"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/copy/{pid}": {
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Copy the latest version of an item",
          "description": "Creates a copy of the specified item. The input document is optional and allows for attributes or file to overriden. Returns a document containing the copied item. If the \"checkout\" parameter is set to \"true\" the new item left in a checked out (locked) state.",
          "operationId": "copyItemApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$checkout",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input document.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AddItem"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddItem"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/copy/{pid}/{version}": {
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Copy a specific version of an item with default data",
          "description": "Creates a copy of the specified item. The input document allows for attributes or file to overriden. Returns a document containing the copied item. If the \"checkout\" parameter is set to \"true\" the new item left in a checked out (locked) state.",
          "operationId": "copyItemVersionApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "in": "path",
              "description": "The items version number.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$checkout",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/count": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Returns the number of items in the search result (by string)",
          "description": "Returns a string containing the number of items in the search result. An example of a query is /MDS_File[@MDS_Name=\"MyName\"] which returns the items named \"MyName\" of the document type \"MDS_Image\".  Note that it's also possible to call the post method with text/plain as parameter content type (when calling from outside this UI).",
          "operationId": "searchCount2",
          "parameters": [
            {
              "name": "$query",
              "in": "query",
              "description": "Query parameter.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Returns the number of items in the search result (by SearchQueries)",
          "description": "Returns a string containing the number of items in the search result. A query is an SearchQueries object in xml or json.",
          "operationId": "searchCountPostXml",
          "parameters": [
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input query.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/search": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Search for items (by string)",
          "description": "Returns a document containing the items matching the query. An example of a query is /MDS_File[@MDS_Name=\"MyName\"] which returns the items named \"MyName\" of the document type \"MDS_Image\". Note that it's also possible to call the post method with text/plain as parameter content type (when calling from outside this UI).",
          "operationId": "searchItemsApi",
          "parameters": [
            {
              "name": "$query",
              "in": "query",
              "description": "Query parameter.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$offset",
              "in": "query",
              "description": "Start index of the search. Use 0 for the first item.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$limit",
              "in": "query",
              "description": "The maximum number of returned items. Must be between 0 and 1000.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$includeCount",
              "in": "query",
              "description": "If a search count should be included in the result, including a count may result that the operation takes longer time to execute",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Search for items (by SearchQueries)",
          "description": "Returns a document containing the items matching the query. A query is an SearchQueries object in xml or json.",
          "operationId": "searchItemsPostXml",
          "parameters": [
            {
              "name": "$offset",
              "in": "query",
              "description": "Start index of the search. Use 0 for the first item.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$limit",
              "in": "query",
              "description": "The maximum number of returned items. Must be between 0 and 1000.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$includeCount",
              "in": "query",
              "description": "If a search count should be included in the result, including a count may result that the operation takes longer time to execute",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input query.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/search/item": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Search for one item (by string)",
          "description": "Returns a document containing an item matching the query. If more than one item matches the query only the first one is returned. An example of a query is /MDS_File[@MDS_Name=\"MyName\"] which returns the items named \"MyName\" of the document type \"MDS_Image\". Note that it's also possible to call the post method with text/plain as parameter content type (when calling from outside this UI).",
          "operationId": "searchItemApi",
          "parameters": [
            {
              "name": "$query",
              "in": "query",
              "description": "Query parameter.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Search for one item (by SearchQueries)",
          "description": "Returns a document containing an item matching the query. If more than one item matches the query only the first one is returned. A query is an SearchQueries object in xml or json.",
          "operationId": "searchItemPostXml",
          "parameters": [
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input query.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/search/item/resource": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Search for an item's main resource (by string)",
          "description": "Returns a document containing the main resource matching the query. If more than one resource matches the query only the first one's main resource is returned. An example of a query is /MDS_File[@MDS_Name=\"MyName\"] which returns the items named \"MyName\" of the document type \"MDS_Image\".  Note that it's also possible to call the post method with text/plain as parameter content type (when calling from outside this UI).",
          "operationId": "searchMainResource",
          "parameters": [
            {
              "name": "$query",
              "in": "query",
              "description": "Query parameter.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Search for an item's main resource (by SearchQueries)",
          "description": "Returns a document containing the main resource matching the query. If more than one resource matches the query only the first one's main resource is returned. A query is an SearchQueries object in xml or json.",
          "operationId": "searchMainResourcePostXml",
          "parameters": [
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input query.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/search/item/resource/stream": {
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Search for the main resource file (by SearchQueries)",
          "description": "Returns the item's main resource file as a stream. If more than one item matches the query only the first one is returned. A query is an SearchQueries object in xml or json.",
          "operationId": "searchMainResourceFilePostXml",
          "parameters": [
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$webdav",
              "in": "query",
              "description": "WebDAV is boolean parameter, which switch a possible to open file over WebDAV functionality.",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "description": "Input query.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/search/item/resource/{conversion}": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Search for an item conversion resource (by string)",
          "description": "Returns a document containing the conversion resource matching the query. If more than one item matches the query only the first one's conversion resource is returned. An example of a query is /MDS_File[@MDS_Name=\"MyName\"] which returns the items named \"MyName\" of the document type \"MDS_Image\". Note that it's also possible to call the post method with text/plain as parameter content type (when calling from outside this UI).",
          "operationId": "searchResourceApi",
          "parameters": [
            {
              "name": "$query",
              "in": "query",
              "description": "Query parameter",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "conversion",
              "in": "path",
              "description": "Name of the conversion type, such as \"Thumbnail\", \"SmallPreview\" or \"Preview\".",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Search for an item conversion resource (by SearchQueries)",
          "description": "Returns a document containing the conversion resource matching the query. If more than one item matches the query only the first one's conversion resource is returned. A query is an SearchQueries object in xml or json.",
          "operationId": "searchResourcePostXml",
          "parameters": [
            {
              "name": "conversion",
              "in": "path",
              "description": "Name of the conversion type, such as \"Thumbnail\", \"SmallPreview\" or \"Preview\".",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input query.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/search/item/resource/{conversion}/stream": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Search for a conversion resource file (by string)",
          "description": "Returns the file as a stream. If more than one item matches the query only the first one's conversion resource is returned. An example of a query is /MDS_File[@MDS_Name=\"MyName\"] which returns the items named \"MyName\" of the document type \"MDS_Image\". Note that it's also possible to call the post method with text/plain as parameter content type (when calling from outside this UI).",
          "operationId": "searchResourceFile",
          "parameters": [
            {
              "name": "$query",
              "in": "query",
              "description": "Query parameter.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "conversion",
              "in": "path",
              "description": "Name of the coversion type, such as \"Thumbnail\", \"SmallPreview\" or \"Preview\".",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Search for a conversion resource file (by SearchQueries)",
          "description": "Returns the file as a stream. If more than one item matches the query only the first one's conversion resource is returned. A query is an SearchQueries object in xml or json.",
          "operationId": "searchResourceFilePostXml",
          "parameters": [
            {
              "name": "conversion",
              "in": "path",
              "description": "Name of the coversion type, such as \"Thumbnail\", \"SmallPreview\" or \"Preview\".",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$state",
              "in": "query",
              "description": "The document state to search for (0 = Active, 1 = Archived and 2 = Deleted).",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input query.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SearchQueries"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/template/{entityName}/{templateName}": {
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Creates a new item from a template with default data",
          "description": "A new item will be created from the specified template. The input document allows for attributes or file to overriden. Returns a document from the template item. If the \"checkout\" parameter is set to \"true\" the new item left in a checked out (locked) state.",
          "operationId": "createItemFromTemplateApi",
          "parameters": [
            {
              "name": "entityName",
              "in": "path",
              "description": "The item entity name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "templateName",
              "in": "path",
              "description": "The template name.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$checkout",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input document.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AddItem"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AddItem"
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/{pid}": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieve an item",
          "description": "Returns a document containing the item.",
          "operationId": "retrieveItemApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Items"
          ],
          "summary": "Update an item",
          "description": "Updates the specified item in the content repository. If the content repository supports versioning and the revisioning policy for this entity is turned on, the update will result in a new version being created. If \"checkout\" is set to \"true\" the item is checked out before the update automatically (if not already checked out) and if \"checkin\" is set to \"true\" the item is checked in after the update. Returns a document containing the updated item.",
          "operationId": "updateItemApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$checkout",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$checkin",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$merge",
              "in": "query",
              "description": "If specified then a merge will be used which means that only the attributes sent in will be updated in the item. The other attributes will keep their existing values.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input document.",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateItem"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateItem"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        },
        "delete": {
          "tags": [
            "Items"
          ],
          "summary": "Delete an item",
          "description": "Deletes the specified item in the content repository.",
          "operationId": "deleteItem",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/checkin": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Check in an item",
          "description": "Checks in the item. Returns a document containing the updated item.",
          "operationId": "checkInItemApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/checkout": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Check out an item",
          "description": "Checks out the item. Returns a document containing the updated item.",
          "operationId": "checkOutItemApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/relatedDocuments": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieve all related documents for a given pid",
          "description": "Returns a document containing the related document items for a given pid.",
          "operationId": "retrieveRelatedDocuments2",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "onlyAssemblable",
              "in": "query",
              "description": "Only assemblable mimetypes",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieve all pid related documents of compatible mimetype to be stittched",
          "description": "Returns an SerializableDocument with related items matching the Mimetypes specified",
          "operationId": "retrieveRelatedDocuentsSelectedMimeTypes",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pdfCompatible",
              "in": "query",
              "description": "Only assemblable compatible with .pdf",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "requestBody": {
            "description": "Mimetypes of item/s to be sttitched",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/{pid}/resource": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieves an item's main resource",
          "description": "Returns a document containing the specified item's main resource.",
          "operationId": "retrieveMainResource",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The items unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Items"
          ],
          "summary": "Update an item resource",
          "description": "Updates the specified item resource in the content repository. For uploading large files this Api should be used. The text content of the file (if any) will not be text searchable when this Api is used. If the content repository supports versioning and the revisioning policy for this entity is turned on, the update will result in a new version being created. If \"checkout\" is set to \"true\" the item is checked out before the update automatically (if not already checked out) and if \"checkin\" is set to \"true\" the item is checked in after the update. Returns a document containing the updated item.",
          "operationId": "updateItemStreaming2",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$checkout",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$checkin",
              "in": "query",
              "description": "Valid values are \"true\" or \"false\".",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "$filename",
              "in": "query",
              "description": "The filename.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input resource file.",
            "content": {
              "application/octet-stream;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/InputStream"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/items/{pid}/resource/stream": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieves an item's main resource file",
          "description": "Returns the specified item's main resource file as a stream.",
          "operationId": "retrieveMainResourceFile2",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$webdav",
              "in": "query",
              "description": "WebDAV is boolean parameter, which switch a possible to open file over WebDAV functionality.",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/resource/{conversion}": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieves an item's resource data based on conversion name",
          "description": "Returns a document that contains the item's converison resource.",
          "operationId": "retrieveResourceApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "conversion",
              "in": "path",
              "description": "Name of the coversion type, such as \"Thumbnail\", \"SmallPreview\" or \"Preview\".",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/resource/{conversion}/stream": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieves an item's resource file based on conversion name",
          "description": "Returns an item conversion resource file as a stream.",
          "operationId": "retrieveResourceFile2",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "conversion",
              "in": "path",
              "description": "Name of the coversion type, such as \"Thumbnail\", \"SmallPreview\" or \"Preview\".",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/undocheckout": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Undo check out of an item",
          "description": "Undo the check out of the item. Returns a document containing the updated item.",
          "operationId": "undoCheckOutItemApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/versions": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieves a collection of all versions of a specified item",
          "description": "If the content repository supports versioning this operation returns a document containing a collection of all of the specified item's versions.",
          "operationId": "retrieveVersionsApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/versions/{version}": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieves a specific version of an item",
          "description": "If the content repository supports versioning this operation returns a document containing the item of the specified version.",
          "operationId": "retrieveVersionApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "in": "path",
              "description": "The items version number.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/versions/{version}/resource": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieves the main resource of a specific item version",
          "description": "If the content repository supports versioning this operation returns a document containing the specified version of the item's main resource.",
          "operationId": "retrieveMainResourceVersion",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "in": "path",
              "description": "The version number.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/versions/{version}/resource/stream": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieves the main resource file of a specific item version",
          "description": "If the content repository supports versioning this operation returns the main resource of the specified item version as a stream.",
          "operationId": "retrieveMainResourceVersionFile",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "in": "path",
              "description": "The version number.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/versions/{version}/resource/{conversion}": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieves the conversion resource of a specific item version",
          "description": "If the content repository supports versioning this operation returns a document containing the conversion resource of the specified item version.",
          "operationId": "retrieveResourceVersionApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "in": "path",
              "description": "The version number.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "conversion",
              "in": "path",
              "description": "Name of the conversion type, such as \"Thumbnail\", \"SmallPreview\" or \"Preview\".",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/versions/{version}/resource/{conversion}/stream": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Retrieves the conversion resource file of a specific item version",
          "description": "If the content repository supports versioning this operation returns the conversion resource of the specified item version as a stream.",
          "operationId": "retrieveResourceVersionFile",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "in": "path",
              "description": "The version number.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "conversion",
              "in": "path",
              "description": "Name of the conversion type, such as \"Thumbnail\", \"SmallPreview\" or \"Preview\".",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/items/{pid}/versions/{version}/revert": {
        "get": {
          "tags": [
            "Items"
          ],
          "summary": "Reverts to a specific version",
          "description": "If the content repository supports versioning this operation reverts the item to the specifed version. A document containing the item is returned.",
          "operationId": "revertVersionApi",
          "parameters": [
            {
              "name": "pid",
              "in": "path",
              "description": "The item's unique identifier.",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "in": "path",
              "description": "The version number to revert to.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/templates/assemble": {
        "get": {
          "tags": [
            "Templates"
          ],
          "summary": "Assembles one or more items into a PDF",
          "description": "Assembles one or more items into a PDF. The items are specified by the pid parameter.",
          "operationId": "assemble",
          "parameters": [
            {
              "name": "$pid",
              "in": "query",
              "description": "One or more PIDs of the items that will be assembled.",
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Templates"
          ],
          "summary": "Assembles one or more items into a single file",
          "description": "Assembles one or more items into a file based on original file/s mimetype. The input CMItems xml should contain the PIDs of all the documents that should be concatenated into one file.",
          "operationId": "assemble2",
          "parameters": [
            {
              "name": "$outputFormat",
              "in": "query",
              "description": "Mimetype/format of the output",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Input document.",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/msword": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.ms-word.template.macroEnabled.12": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.ms-word.document.macroEnabled.12": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/msword": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.ms-word.template.macroEnabled.12": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.ms-word.document.macroEnabled.12": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/msword": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.ms-word.template.macroEnabled.12": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.ms-word.document.macroEnabled.12": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/msword": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.ms-word.template.macroEnabled.12": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.ms-word.document.macroEnabled.12": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/msword": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.ms-word.template.macroEnabled.12": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/vnd.ms-word.document.macroEnabled.12": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/templates/item": {
        "post": {
          "tags": [
            "Templates"
          ],
          "summary": "Populate a template and add it to IDM",
          "description": "Populates the input template file and adds it as a new item in IDM. Returns a document containing the item that was created. The new item is specified with the `item` parameter. For additional details, see the /api/templates/stream method.",
          "operationId": "populateTemplateAddItem",
          "parameters": [
            {
              "name": "$mimetype",
              "in": "query",
              "description": "Mimetype of the output.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$filename",
              "in": "query",
              "description": "Filename of the output.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$pid",
              "in": "query",
              "description": "Pid of a template stored in IDM. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$templateEntityName",
              "in": "query",
              "description": "The name of an IDM entity. Used with $templateName. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$templateName",
              "in": "query",
              "description": "The name of a template stored in IDM. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "required": [
                    "item"
                  ],
                  "properties": {
                    "template": {
                      "type": "string",
                      "description": "The template file (DOCX).",
                      "format": "binary"
                    },
                    "data": {
                      "type": "string",
                      "description": "The data input (XML).",
                      "format": "binary"
                    },
                    "templateController": {
                      "type": "string",
                      "description": "The controller input (XML/JSON).",
                      "format": "binary"
                    },
                    "item": {
                      "type": "string",
                      "description": "The item that will be created in IDM (XML/JSON).",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/templates/item/stream": {
        "post": {
          "tags": [
            "Templates"
          ],
          "summary": "Populate a template and add it to IDM",
          "description": "Populates the input template file and adds it as a new item in IDM. Returns the resulting file as a stream. The new item is specified with the `item` parameter. For additional details, see the /api/templates/stream method.",
          "operationId": "populateTemplateAddItemStream",
          "parameters": [
            {
              "name": "$mimetype",
              "in": "query",
              "description": "Mimetype of the output.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$filename",
              "in": "query",
              "description": "Filename of the output.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$pid",
              "in": "query",
              "description": "Pid of a template stored in IDM. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$templateEntityName",
              "in": "query",
              "description": "The name of an IDM entity. Used with $templateName. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$templateName",
              "in": "query",
              "description": "The name of a template stored in IDM. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "required": [
                    "item"
                  ],
                  "properties": {
                    "template": {
                      "type": "string",
                      "description": "The template file (DOCX).",
                      "format": "binary"
                    },
                    "data": {
                      "type": "string",
                      "description": "The data input (XML).",
                      "format": "binary"
                    },
                    "templateController": {
                      "type": "string",
                      "description": "The controller input (XML/JSON).",
                      "format": "binary"
                    },
                    "item": {
                      "type": "string",
                      "description": "The item that will be created in IDM (XML/JSON).",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/templates/item/{pid}": {
        "put": {
          "tags": [
            "Templates"
          ],
          "summary": "Populate a template and add it to an existing item in IDM",
          "description": "Populates the input template file and adds it to an existing item in IDM. Returns a document containing the updated item. The new item is specified with the `item` parameter. For additional details, see the /api/templates/stream method.",
          "operationId": "populateTemplateUpdateItem",
          "parameters": [
            {
              "name": "$mimetype",
              "in": "query",
              "description": "Mimetype of the output.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$filename",
              "in": "query",
              "description": "Filename of the output.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$pid",
              "in": "query",
              "description": "Pid of a template stored in IDM. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$templateEntityName",
              "in": "query",
              "description": "The name of an IDM entity. Used with $templateName. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$templateName",
              "in": "query",
              "description": "The name of a template stored in IDM. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pid",
              "in": "path",
              "description": "The pid of the item in IDM that should be updated.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "properties": {
                    "template": {
                      "type": "string",
                      "description": "The template file (DOCX).",
                      "format": "binary"
                    },
                    "data": {
                      "type": "string",
                      "description": "The data input (XML).",
                      "format": "binary"
                    },
                    "templateController": {
                      "type": "string",
                      "description": "The controller input (XML/JSON).",
                      "format": "binary"
                    },
                    "item": {
                      "type": "string",
                      "description": "The item that will be created in IDM (XML/JSON).",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/xml;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/templates/item/{pid}/stream": {
        "put": {
          "tags": [
            "Templates"
          ],
          "summary": "Populate a template and add it to an existing item in IDM",
          "description": "Populates the input template file and adds it to an existing item in IDM. Returns the resulting file as a stream. The new item is specified with the `item` parameter. For additional details, see the /api/templates/stream method.",
          "operationId": "populateTemplateUpdateItemStream",
          "parameters": [
            {
              "name": "$mimetype",
              "in": "query",
              "description": "Mimetype of the output.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$filename",
              "in": "query",
              "description": "Filename of the output.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$pid",
              "in": "query",
              "description": "Pid of a template stored in IDM. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$templateEntityName",
              "in": "query",
              "description": "The name of an IDM entity. Used with $templateName. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$templateName",
              "in": "query",
              "description": "The name of a template stored in IDM. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pid",
              "in": "path",
              "description": "The pid of the item in IDM that should be updated.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "properties": {
                    "template": {
                      "type": "string",
                      "description": "The template file (DOCX).",
                      "format": "binary"
                    },
                    "data": {
                      "type": "string",
                      "description": "The data input (XML).",
                      "format": "binary"
                    },
                    "templateController": {
                      "type": "string",
                      "description": "The controller input (XML/JSON).",
                      "format": "binary"
                    },
                    "item": {
                      "type": "string",
                      "description": "The item that will be created in IDM (XML/JSON).",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/templates/stream": {
        "post": {
          "tags": [
            "Templates"
          ],
          "summary": "Populate a template",
          "description": "Populates the input template file and returns the resulting file as a stream. \n# Overview\nTo populate a template with data it must contain content controls. The data in the content controls will be replaced based on the `data` file or the `templateController` file. These two files provide two different ways to populate the template.\n\nExample files can be found in the Example project that is available for download for both Java and .Net.\n## data\nThe data file is an XML file that will replace the Custom XML Part with the same namespace in the template. Content controls that are mapped to the Custom XML Part will be updated with the data from the XML file based on the Xpath of the elements. Text and base64-encoded images are supported in the XML.\n## templateController\nThe templateController is a JSON/XML file that allows you to control specific content controls. Mapping to content controls are done using the `tag` attribute that must match the tag of the content control.\n Available attributes:\n* `text` - Sets the text of the content control. If carriage returns are allowed on the control, new lines can be inserted with `\\n`\n* `visible` - Hides the content control and its contents if set to `true`\n* `imageBase64` - Replaces the content of an image content control with this base64-encoded image \n\n# Watermark\nA watermark text can be inserted into the document that will be visible in the center of all pages. This is done by defining the `watermark` element in the templateController file. The following attributes are available in the watermark element:\n  * `text` - Required. Defines the text of the watermark\n  * `color` - Defines the color of the watermark using the values (0-255) of the child elements: `red`, `green` and `blue`\n  * `fontSize` - The font size of the watermark text\n  * `fontFamily` - The font family of the watermark text\n  * `textRotation` - The clockwise rotation of the watermark text (degrees)\n\n# Template input\nThe template is a .docx file that can be specified using one of these three parameter options:\n* `template` - An external file. Upload the template file using the browse button.\n* `$pid` - If the template is already stored in IDM the pid of a template can be used as a reference.\n* `$templateEntityName AND $templateName` - If the template is already stored in IDM the entity name and name of the template can be used as a reference\n\n# Images\nIt's possible to change the image of an image content control by sending an image file in the form-data. The name of the form field must match the tag of the content control.\n# Output formats\nThe output format is specified by the `$mimetype` parameter, or the extension in the `$filename` parameter if no mimetype is specified. If none of these parameters are specified the default extension `.docx` will be used. Available file extensions (and corresponding mimetype):\n* `.docx (application/vnd.openxmlformats-officedocument.wordprocessingml.document)`\n* `.doc (application/msword)`\n* `.pdf (application/pdf)`\n* `.odt (application/vnd.oasis.opendocument.text)`\n* `.rtf (application/rtf)`\n* `.txt (text/plain)`\n* `.jpg (image/jpeg)`\n* `.png (image/png)`\n",
          "operationId": "populateTemplate",
          "parameters": [
            {
              "name": "$mimetype",
              "in": "query",
              "description": "Mimetype of the output.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$filename",
              "in": "query",
              "description": "Filename of the output.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$pid",
              "in": "query",
              "description": "Pid of a template stored in IDM. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$templateEntityName",
              "in": "query",
              "description": "The name of an IDM entity. Used with $templateName. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$templateName",
              "in": "query",
              "description": "The name of a template stored in IDM. See Template Input description in the templates/stream api for more information.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "properties": {
                    "template": {
                      "type": "string",
                      "description": "The template file (DOCX).",
                      "format": "binary"
                    },
                    "data": {
                      "type": "string",
                      "description": "The data input (XML).",
                      "format": "binary"
                    },
                    "templateController": {
                      "type": "string",
                      "description": "The controller input (XML/JSON).",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/octet-stream;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/signature/authorization/login": {
        "get": {
          "tags": [
            "Signature V1"
          ],
          "summary": "Retrieve OAuth2 authorization token.",
          "description": "Retrieve access token through authorization code by using OAuth2 method.",
          "operationId": "loginAuthorization",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "code",
              "in": "query",
              "description": "DocuSign authorization Code form authentication service",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "state",
              "in": "query",
              "description": "The State parameter which provided in the initial request",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/signature/authorization/request": {
        "get": {
          "tags": [
            "Signature V1"
          ],
          "summary": "Digital signature authorization using OAuth2 method.",
          "description": "Authorization in digital signature service by using OAuth2 method.",
          "operationId": "requestAuthorization",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/signature/envelopes/send": {
        "post": {
          "tags": [
            "Signature V1"
          ],
          "summary": "Digital signature service send envelope.",
          "description": "Send envelope of Documents to digital signature service.",
          "operationId": "sendEnvelope",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "edit",
              "in": "query",
              "description": "Set to [true], if you want to have the edit view URL in response.",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "description": "JSON payload, representing envelope of documents for Digital Signature service.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureEnvelope"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "body"
        }
      },
      "/v1/signature/envelopes/{id}": {
        "get": {
          "tags": [
            "Signature V1"
          ],
          "summary": "Digital signature service retrieve detailed envelope information.",
          "description": "Retrieve detailed information by ID of the envelope from digital signature service.",
          "operationId": "getEnvelope",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "Identifier of the envelope for retrieve detailed information.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Signature V1"
          ],
          "summary": "Digital signature service cancel the envelope signing process.",
          "description": "Cancel signing process of the envelope by the given ID and release current version of IDM document.",
          "operationId": "deleteEnvelope",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "ID of the envelope to delete.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/signature/envelopes/{id}/resource": {
        "get": {
          "tags": [
            "Signature V1"
          ],
          "summary": "Digital signature service retrieve envelope resources for completed envelope.",
          "description": "Retrieve envelope resources by ID of the envelope from digital signature service.",
          "operationId": "getEnvelopeResources",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "Identifier of the envelope for retrieving resource files.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/octet-stream": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/octet-stream": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/octet-stream": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/octet-stream": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/octet-stream": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/signature/items/{pid}/envelopes": {
        "get": {
          "tags": [
            "Signature V1"
          ],
          "summary": "Digital signature service list of created envelopes.",
          "description": "Retrieve the list of envelopes by document PID from digital signature service.",
          "operationId": "listEnvelopes",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pid",
              "in": "path",
              "description": "PID of the document for retrieve list of envelopes.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/signature/templates": {
        "get": {
          "tags": [
            "Signature V1"
          ],
          "summary": "Digital signature service Templates list.",
          "description": "Retrieve list of Templates from digital signature service.",
          "operationId": "listTemplates",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/signature/templates/{id}": {
        "get": {
          "tags": [
            "Signature V1"
          ],
          "summary": "Digital signature service Template information.",
          "description": "Retrieve detailed information of Template from digital signature service.",
          "operationId": "getTemplate",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "Identifier of template for retrieve detailed information.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/signature/users": {
        "get": {
          "tags": [
            "Signature V1"
          ],
          "summary": "Digital signature service retrieve users by name fragment or email.",
          "description": "Retrieve users by name fragment or email from digital signature service.",
          "operationId": "getUsers",
          "parameters": [
            {
              "name": "$language",
              "in": "query",
              "description": "Language parameter, for example 'en' or 'en-US'. Enables localized error messages.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "in": "query",
              "description": "A fragment of either or both of the first name or last name of the user.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "email",
              "in": "query",
              "description": "The email of the user.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/useranalytics/login": {
        "get": {
          "tags": [
            "User Analytics"
          ],
          "summary": "Get the Access key and Refresh Token from QuickSight",
          "description": "Retrieve Access key and Refresh Token from QuickSight",
          "operationId": "getUserAnalyticsAccessKeyAndRefreshToken",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Forbidden",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json;charset=utf-8": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "AccessControlList": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        },
        "AddItem": {
          "type": "object",
          "properties": {
            "item": {
              "$ref": "#/components/schemas/AddItemInner"
            }
          }
        },
        "AddItemInner": {
          "type": "object",
          "properties": {
            "attrs": {
              "$ref": "#/components/schemas/Attributes"
            },
            "resrs": {
              "$ref": "#/components/schemas/Resources"
            },
            "acl": {
              "$ref": "#/components/schemas/AccessControlList"
            },
            "entityName": {
              "type": "string"
            }
          },
          "xml": {
            "name": "item",
            "namespace": "http://infor.com/daf"
          }
        },
        "AssembleFile": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IFile"
            },
            {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "item": {
                  "$ref": "#/components/schemas/IFile"
                },
                "files": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IFile"
                  }
                }
              }
            }
          ]
        },
        "Attachments": {
          "type": "object",
          "properties": {
            "file": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/File"
              }
            }
          }
        },
        "Attribute": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "Attributes": {
          "type": "object",
          "properties": {
            "attr": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Attribute"
              }
            }
          }
        },
        "BCData": {
          "type": "object",
          "properties": {
            "screenId": {
              "type": "string"
            },
            "logicalId": {
              "type": "string"
            },
            "entities": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BCEntity"
              }
            },
            "contextId": {
              "type": "string"
            },
            "originatingTime": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "BCEntity": {
          "type": "object",
          "properties": {
            "entityType": {
              "type": "string"
            },
            "id1": {
              "type": "string"
            },
            "id2": {
              "type": "string"
            },
            "id3": {
              "type": "string"
            },
            "id4": {
              "type": "string"
            },
            "id5": {
              "type": "string"
            },
            "id6": {
              "type": "string"
            },
            "id7": {
              "type": "string"
            },
            "id8": {
              "type": "string"
            },
            "id9": {
              "type": "string"
            },
            "id10": {
              "type": "string"
            },
            "id11": {
              "type": "string"
            },
            "id12": {
              "type": "string"
            },
            "id13": {
              "type": "string"
            },
            "id14": {
              "type": "string"
            },
            "id15": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "accountingEntity": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "readOnly": {
              "type": "boolean"
            },
            "visible": {
              "type": "boolean"
            },
            "drillbackURL": {
              "type": "string"
            },
            "bodReference": {
              "$ref": "#/components/schemas/BodReference"
            }
          }
        },
        "BatchOperation": {
          "type": "object",
          "properties": {
            "type": {
              "type": "integer",
              "format": "int32"
            },
            "input": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "BatchOperations": {
          "type": "object",
          "properties": {
            "batchOperations": {
              "$ref": "#/components/schemas/BatchOperationsInner"
            }
          }
        },
        "BatchOperationsInner": {
          "type": "object",
          "properties": {
            "batchOperation": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BatchOperation"
              }
            }
          },
          "xml": {
            "name": "batchOperations",
            "namespace": "http://infor.com/daf"
          }
        },
        "BatchStatusResult": {
          "type": "object",
          "properties": {
            "remaining": {
              "type": "integer",
              "format": "int64"
            },
            "noOfFailed": {
              "type": "integer",
              "format": "int64"
            },
            "noOfsucceeded": {
              "type": "integer",
              "format": "int64"
            },
            "failed": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatusResult"
              }
            }
          }
        },
        "BodReference": {
          "type": "object",
          "properties": {
            "noun": {
              "type": "string"
            },
            "documentId": {
              "type": "string"
            },
            "accountingEntity": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "revisionId": {
              "type": "string"
            }
          }
        },
        "CMAccessControlList": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "displayName": {
              "type": "string"
            }
          }
        },
        "CMAttribute": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "UNDEFINED",
                "STRING",
                "SHORT",
                "LONG",
                "DECIMAL",
                "DATE",
                "TIME",
                "TIMESTAMP",
                "DOUBLE",
                "BOOL",
                "UUID"
              ]
            },
            "value": {
              "type": "object",
              "properties": {}
            },
            "defaultValue": {
              "type": "object",
              "properties": {}
            },
            "qualifiedName": {
              "type": "string"
            },
            "required": {
              "type": "boolean"
            },
            "unique": {
              "type": "boolean"
            },
            "textSearchable": {
              "type": "boolean"
            },
            "representative": {
              "type": "boolean"
            },
            "readOnly": {
              "type": "boolean"
            },
            "max": {
              "$ref": "#/components/schemas/Number"
            },
            "min": {
              "$ref": "#/components/schemas/Number"
            },
            "size": {
              "type": "integer",
              "format": "int32"
            },
            "valueSetEntity": {
              "type": "string"
            },
            "valueSetAttribute": {
              "type": "string"
            },
            "valueSet": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CMValue"
              }
            },
            "nodeName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          }
        },
        "CMCollection": {
          "type": "object",
          "properties": {
            "entityName": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CMAttribute"
              }
            },
            "allCollections": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CMCollection"
                }
              }
            },
            "nodeName": {
              "type": "string"
            }
          }
        },
        "CMItem": {
          "type": "object",
          "properties": {
            "entityName": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CMAttribute"
              }
            },
            "allCollections": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CMCollection"
                }
              }
            },
            "checkedOutBy": {
              "type": "string"
            },
            "checkedOutByName": {
              "type": "string"
            },
            "checkedOutTimestamp": {
              "type": "string",
              "format": "date-time"
            },
            "createdBy": {
              "type": "string"
            },
            "createdByName": {
              "type": "string"
            },
            "createdTimestamp": {
              "type": "string",
              "format": "date-time"
            },
            "lastChangedBy": {
              "type": "string"
            },
            "lastChangedByName": {
              "type": "string"
            },
            "lastChangedTimestamp": {
              "type": "string",
              "format": "date-time"
            },
            "filename": {
              "type": "string"
            },
            "size": {
              "type": "integer",
              "format": "int64"
            },
            "pid": {
              "type": "string"
            },
            "pid2": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "version": {
              "type": "integer",
              "format": "int32"
            },
            "representsItem": {
              "type": "string"
            },
            "resources": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CMResource"
              }
            },
            "drillbackurl": {
              "type": "string"
            },
            "nodeName": {
              "type": "string"
            },
            "status": {
              "type": "boolean"
            },
            "checkedOut": {
              "type": "boolean"
            },
            "accessControlList": {
              "$ref": "#/components/schemas/CMAccessControlList"
            },
            "displayName": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "CMResource": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "size": {
              "type": "integer",
              "format": "int64"
            },
            "filename": {
              "type": "string"
            },
            "url": {
              "type": "string",
              "format": "url"
            },
            "sha256": {
              "type": "string"
            },
            "byteArray": {
              "type": "array",
              "items": {
                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                "type": "string",
                "format": "byte"
              }
            },
            "nodeName": {
              "type": "string"
            },
            "mimeType": {
              "type": "string"
            },
            "urlStream": {
              "$ref": "#/components/schemas/InputStream"
            },
            "displayName": {
              "type": "string"
            }
          }
        },
        "CMResourceData": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "mimeType": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "stream": {
              "$ref": "#/components/schemas/InputStream"
            },
            "httpStatus": {
              "type": "integer",
              "format": "int32"
            },
            "lastModified": {
              "type": "string",
              "format": "date-time"
            },
            "maxAge": {
              "type": "integer",
              "format": "int32"
            },
            "size": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "CMValue": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "nodeName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          }
        },
        "ColumnDefinition": {
          "type": "object",
          "properties": {
            "autoSum": {
              "type": "boolean"
            },
            "autoFit": {
              "type": "boolean"
            },
            "isUrl": {
              "type": "boolean"
            },
            "urlText": {
              "type": "string"
            },
            "cellFormat": {
              "type": "string"
            }
          }
        },
        "Content": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "file": {
              "type": "string"
            },
            "ext": {
              "type": "string"
            },
            "data": {
              "type": "string"
            }
          }
        },
        "DOMConfiguration": {
          "type": "object",
          "properties": {
            "parameterNames": {
              "$ref": "#/components/schemas/DOMStringList"
            }
          }
        },
        "DOMImplementation": {
          "type": "object"
        },
        "DOMStringList": {
          "type": "object",
          "properties": {
            "length": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "DataFile": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IFile"
            },
            {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "item": {
                  "$ref": "#/components/schemas/IFile"
                },
                "base64": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "DateSignedTab": {
          "type": "object",
          "properties": {
            "position": {
              "$ref": "#/components/schemas/TabPosition"
            },
            "options": {
              "$ref": "#/components/schemas/TabOptions"
            },
            "fontOptions": {
              "$ref": "#/components/schemas/FontOptions"
            }
          }
        },
        "Document": {
          "type": "object",
          "properties": {
            "doctype": {
              "$ref": "#/components/schemas/DocumentType"
            },
            "documentElement": {
              "$ref": "#/components/schemas/Element"
            },
            "xmlStandalone": {
              "type": "boolean"
            },
            "xmlVersion": {
              "type": "string"
            },
            "strictErrorChecking": {
              "type": "boolean"
            },
            "documentURI": {
              "type": "string"
            },
            "domConfig": {
              "$ref": "#/components/schemas/DOMConfiguration"
            },
            "inputEncoding": {
              "type": "string"
            },
            "xmlEncoding": {
              "type": "string"
            },
            "implementation": {
              "$ref": "#/components/schemas/DOMImplementation"
            },
            "nodeValue": {
              "type": "string"
            },
            "parentNode": {
              "$ref": "#/components/schemas/Node"
            },
            "lastChild": {
              "$ref": "#/components/schemas/Node"
            },
            "previousSibling": {
              "$ref": "#/components/schemas/Node"
            },
            "ownerDocument": {
              "$ref": "#/components/schemas/Document"
            },
            "namespaceURI": {
              "type": "string"
            },
            "localName": {
              "type": "string"
            },
            "baseURI": {
              "type": "string"
            },
            "textContent": {
              "type": "string"
            },
            "childNodes": {
              "$ref": "#/components/schemas/NodeList"
            },
            "nodeName": {
              "type": "string"
            },
            "nodeType": {
              "type": "integer",
              "format": "int32"
            },
            "prefix": {
              "type": "string"
            },
            "firstChild": {
              "$ref": "#/components/schemas/Node"
            },
            "nextSibling": {
              "$ref": "#/components/schemas/Node"
            },
            "attributes": {
              "$ref": "#/components/schemas/NamedNodeMap"
            }
          }
        },
        "DocumentInformation": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string",
              "readOnly": true
            },
            "pid": {
              "type": "string",
              "readOnly": true
            },
            "drillback": {
              "type": "string",
              "readOnly": true
            }
          }
        },
        "DocumentType": {
          "type": "object",
          "properties": {
            "publicId": {
              "type": "string"
            },
            "systemId": {
              "type": "string"
            },
            "notations": {
              "$ref": "#/components/schemas/NamedNodeMap"
            },
            "internalSubset": {
              "type": "string"
            },
            "entities": {
              "$ref": "#/components/schemas/NamedNodeMap"
            },
            "name": {
              "type": "string"
            },
            "nodeValue": {
              "type": "string"
            },
            "parentNode": {
              "$ref": "#/components/schemas/Node"
            },
            "lastChild": {
              "$ref": "#/components/schemas/Node"
            },
            "previousSibling": {
              "$ref": "#/components/schemas/Node"
            },
            "ownerDocument": {
              "$ref": "#/components/schemas/Document"
            },
            "namespaceURI": {
              "type": "string"
            },
            "localName": {
              "type": "string"
            },
            "baseURI": {
              "type": "string"
            },
            "textContent": {
              "type": "string"
            },
            "childNodes": {
              "$ref": "#/components/schemas/NodeList"
            },
            "nodeName": {
              "type": "string"
            },
            "nodeType": {
              "type": "integer",
              "format": "int32"
            },
            "prefix": {
              "type": "string"
            },
            "firstChild": {
              "$ref": "#/components/schemas/Node"
            },
            "nextSibling": {
              "$ref": "#/components/schemas/Node"
            },
            "attributes": {
              "$ref": "#/components/schemas/NamedNodeMap"
            }
          }
        },
        "Element": {
          "type": "object",
          "properties": {
            "tagName": {
              "type": "string"
            },
            "schemaTypeInfo": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nodeValue": {
              "type": "string"
            },
            "parentNode": {
              "$ref": "#/components/schemas/Node"
            },
            "lastChild": {
              "$ref": "#/components/schemas/Node"
            },
            "previousSibling": {
              "$ref": "#/components/schemas/Node"
            },
            "ownerDocument": {
              "$ref": "#/components/schemas/Document"
            },
            "namespaceURI": {
              "type": "string"
            },
            "localName": {
              "type": "string"
            },
            "baseURI": {
              "type": "string"
            },
            "textContent": {
              "type": "string"
            },
            "childNodes": {
              "$ref": "#/components/schemas/NodeList"
            },
            "nodeName": {
              "type": "string"
            },
            "nodeType": {
              "type": "integer",
              "format": "int32"
            },
            "prefix": {
              "type": "string"
            },
            "firstChild": {
              "$ref": "#/components/schemas/Node"
            },
            "nextSibling": {
              "$ref": "#/components/schemas/Node"
            },
            "attributes": {
              "$ref": "#/components/schemas/NamedNodeMap"
            }
          }
        },
        "EmailMessage": {
          "type": "object",
          "properties": {
            "emailMessage": {
              "$ref": "#/components/schemas/EmailMessageInner"
            }
          },
          "xml": {
            "name": "email",
            "namespace": "http://infor.com/daf"
          }
        },
        "EmailMessageInner": {
          "type": "object",
          "properties": {
            "to": {
              "type": "string"
            },
            "cc": {
              "type": "string"
            },
            "bcc": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "template": {
              "type": "string"
            },
            "attachments": {
              "$ref": "#/components/schemas/Attachments"
            }
          },
          "xml": {
            "name": "emailMessage",
            "namespace": "http://infor.com/daf"
          }
        },
        "EmailTarget": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ITarget"
            },
            {
              "type": "object",
              "properties": {
                "include": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "to": {
                  "type": "string"
                },
                "cc": {
                  "type": "string"
                },
                "bcc": {
                  "type": "string"
                },
                "subject": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "from": {
                  "type": "string"
                },
                "fromDisplayName": {
                  "type": "string"
                },
                "bodyFileName": {
                  "type": "string"
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IFile"
                  }
                },
                "links": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Link"
                  }
                },
                "attachmentsAsLinks": {
                  "type": "boolean"
                }
              }
            }
          ]
        },
        "ExtendedInfo": {
          "type": "object",
          "properties": {
            "retTime": {
              "type": "integer",
              "format": "int64"
            },
            "genTime": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "File": {
          "type": "object",
          "properties": {
            "pid": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "mimetype": {
              "type": "string"
            },
            "base64": {
              "type": "string"
            },
            "xquery": {
              "type": "string"
            }
          }
        },
        "FontOptions": {
          "type": "object",
          "properties": {
            "font": {
              "type": "string"
            },
            "fontSize": {
              "type": "integer",
              "format": "int32"
            },
            "fontColor": {
              "type": "string"
            },
            "bold": {
              "type": "boolean"
            },
            "italic": {
              "type": "boolean"
            }
          }
        },
        "FullNameTab": {
          "type": "object",
          "properties": {
            "position": {
              "$ref": "#/components/schemas/TabPosition"
            },
            "options": {
              "$ref": "#/components/schemas/TabOptions"
            },
            "fontOptions": {
              "$ref": "#/components/schemas/FontOptions"
            }
          }
        },
        "GenerateFile": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IFile"
            },
            {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "item": {
                  "$ref": "#/components/schemas/IFile"
                },
                "preProcessor": {
                  "$ref": "#/components/schemas/IFile"
                },
                "data": {
                  "$ref": "#/components/schemas/IFile"
                },
                "template": {
                  "$ref": "#/components/schemas/IFile"
                },
                "isPdfA": {
                  "type": "boolean"
                },
                "fontSubstitutions": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        },
        "IFile": {
          "type": "object",
          "discriminator": {
            "propertyName": "type"
          }
        },
        "ITarget": {
          "type": "object",
          "discriminator": {
            "propertyName": "type"
          }
        },
        "InitialHereTab": {
          "type": "object",
          "properties": {
            "position": {
              "$ref": "#/components/schemas/TabPosition"
            },
            "options": {
              "$ref": "#/components/schemas/TabOptions"
            }
          }
        },
        "InputStream": {
          "type": "object"
        },
        "ItemData": {
          "type": "object",
          "properties": {
            "resourceId": {
              "type": "string"
            },
            "resourceContent": {
              "type": "string"
            },
            "item": {
              "$ref": "#/components/schemas/CMItem"
            },
            "resourcePath": {
              "type": "string"
            },
            "resourceHash": {
              "type": "string"
            },
            "fileName": {
              "type": "string"
            }
          }
        },
        "ItemFile": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string"
            },
            "item": {
              "$ref": "#/components/schemas/IFile"
            }
          }
        },
        "ItemListFile": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IFile"
            },
            {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "item": {
                  "$ref": "#/components/schemas/IFile"
                },
                "xquery": {
                  "type": "string",
                  "readOnly": true
                },
                "merge": {
                  "type": "boolean"
                },
                "files": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListDataFile"
                  }
                }
              }
            }
          ]
        },
        "ItemPidFile": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IFile"
            },
            {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "item": {
                  "$ref": "#/components/schemas/IFile"
                },
                "pid": {
                  "type": "string"
                },
                "includeRelatedDocuments": {
                  "type": "boolean"
                }
              }
            }
          ]
        },
        "ItemPriorityFile": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IFile"
            },
            {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "item": {
                  "$ref": "#/components/schemas/IFile"
                },
                "priority": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemFile"
                  }
                }
              }
            }
          ]
        },
        "ItemTarget": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ITarget"
            },
            {
              "type": "object",
              "properties": {
                "include": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "itemdatafile": {
                  "$ref": "#/components/schemas/DataFile"
                },
                "updateVersion": {
                  "$ref": "#/components/schemas/UpdateVersion"
                }
              }
            }
          ]
        },
        "ItemTemplateFile": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IFile"
            },
            {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "item": {
                  "$ref": "#/components/schemas/IFile"
                },
                "templateEntityName": {
                  "type": "string"
                },
                "templateName": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "ItemXqueryFile": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IFile"
            },
            {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "item": {
                  "$ref": "#/components/schemas/IFile"
                },
                "xquery": {
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "LargeReportFile": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IFile"
            },
            {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "item": {
                  "$ref": "#/components/schemas/IFile"
                },
                "template": {
                  "$ref": "#/components/schemas/IFile"
                },
                "cover": {
                  "$ref": "#/components/schemas/IFile"
                },
                "csv": {
                  "$ref": "#/components/schemas/IFile"
                },
                "isPdfA": {
                  "type": "boolean"
                },
                "separator": {
                  "type": "string"
                },
                "splitonrow": {
                  "type": "integer",
                  "format": "int32"
                },
                "maxNoOfRowsPerPdf": {
                  "type": "integer",
                  "format": "int32"
                },
                "papersize": {
                  "type": "string",
                  "enum": [
                    "A3",
                    "A4",
                    "A5",
                    "B4",
                    "B5",
                    "EXECUTIVE",
                    "FOLIO",
                    "LEDGER",
                    "LEGAL",
                    "LETTER",
                    "ENVELOPE_DL",
                    "QUARTO",
                    "STATEMENT",
                    "TABLOID",
                    "PAPER_10_X_14",
                    "PAPER_11_X_17",
                    "CUSTOM"
                  ]
                },
                "columns": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColumnDefinition"
                  }
                },
                "autoFitRows": {
                  "type": "boolean"
                }
              }
            }
          ]
        },
        "Link": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          }
        },
        "ListDataFile": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string"
            },
            "item": {
              "$ref": "#/components/schemas/IFile"
            },
            "fileName": {
              "type": "string"
            }
          }
        },
        "ListDefinition": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "columns": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ColumnDefinition"
              }
            }
          }
        },
        "MediaSize": {
          "type": "object",
          "properties": {
            "width": {
              "type": "number",
              "format": "float"
            },
            "height": {
              "type": "number",
              "format": "float"
            },
            "marginFromLeft": {
              "type": "number",
              "format": "float"
            },
            "marginFromTop": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "NamedNodeMap": {
          "type": "object",
          "properties": {
            "length": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "Node": {
          "type": "object",
          "properties": {
            "nodeValue": {
              "type": "string"
            },
            "parentNode": {
              "$ref": "#/components/schemas/Node"
            },
            "lastChild": {
              "$ref": "#/components/schemas/Node"
            },
            "previousSibling": {
              "$ref": "#/components/schemas/Node"
            },
            "ownerDocument": {
              "$ref": "#/components/schemas/Document"
            },
            "namespaceURI": {
              "type": "string"
            },
            "localName": {
              "type": "string"
            },
            "baseURI": {
              "type": "string"
            },
            "textContent": {
              "type": "string"
            },
            "childNodes": {
              "$ref": "#/components/schemas/NodeList"
            },
            "nodeName": {
              "type": "string"
            },
            "nodeType": {
              "type": "integer",
              "format": "int32"
            },
            "prefix": {
              "type": "string"
            },
            "firstChild": {
              "$ref": "#/components/schemas/Node"
            },
            "nextSibling": {
              "$ref": "#/components/schemas/Node"
            },
            "attributes": {
              "$ref": "#/components/schemas/NamedNodeMap"
            }
          }
        },
        "NodeList": {
          "type": "object",
          "properties": {
            "length": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "Number": {
          "type": "object"
        },
        "PrintTarget": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ITarget"
            },
            {
              "type": "object",
              "properties": {
                "include": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "printerId": {
                  "type": "string"
                },
                "noOfCopies": {
                  "type": "integer",
                  "format": "int32"
                },
                "printService": {
                  "type": "string"
                },
                "printerTray": {
                  "type": "string"
                },
                "resolution": {
                  "type": "integer",
                  "format": "int32"
                },
                "useRenderingHints": {
                  "type": "boolean"
                },
                "sides": {
                  "type": "string",
                  "enum": [
                    "ONE_SIDED",
                    "TWO_SIDED_LONG_EDGE",
                    "TWO_SIDED_SHORT_EDGE"
                  ]
                },
                "orientation": {
                  "type": "string",
                  "enum": [
                    "AUTO",
                    "PORTRAIT",
                    "LANDSCAPE"
                  ]
                },
                "scaling": {
                  "type": "string",
                  "enum": [
                    "ACTUAL_SIZE",
                    "SHRINK_TO_FIT",
                    "STRETCH_TO_FIT",
                    "SCALE_TO_FIT"
                  ]
                },
                "color": {
                  "type": "string",
                  "enum": [
                    "MONOCHROME",
                    "COLOR"
                  ]
                },
                "mediaSize": {
                  "$ref": "#/components/schemas/MediaSize"
                }
              }
            }
          ]
        },
        "Recipient": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "order": {
              "type": "integer",
              "format": "int32"
            },
            "sent": {
              "type": "integer",
              "format": "int64"
            },
            "declined": {
              "type": "integer",
              "format": "int64"
            },
            "completed": {
              "type": "integer",
              "format": "int64"
            },
            "tabs": {
              "$ref": "#/components/schemas/SignatureTabs"
            }
          }
        },
        "ReportFile": {
          "allOf": [
            {
              "$ref": "#/components/schemas/IFile"
            },
            {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "item": {
                  "$ref": "#/components/schemas/IFile"
                },
                "template": {
                  "$ref": "#/components/schemas/IFile"
                },
                "csvs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IFile"
                  }
                },
                "isPdfA": {
                  "type": "boolean"
                },
                "separator": {
                  "type": "string"
                },
                "papersize": {
                  "type": "string",
                  "enum": [
                    "A3",
                    "A4",
                    "A5",
                    "B4",
                    "B5",
                    "EXECUTIVE",
                    "FOLIO",
                    "LEDGER",
                    "LEGAL",
                    "LETTER",
                    "ENVELOPE_DL",
                    "QUARTO",
                    "STATEMENT",
                    "TABLOID",
                    "PAPER_10_X_14",
                    "PAPER_11_X_17",
                    "CUSTOM"
                  ]
                },
                "sheets": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SheetDefinition"
                  }
                }
              }
            }
          ]
        },
        "Resource": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string"
            },
            "base64": {
              "type": "string"
            }
          }
        },
        "Resources": {
          "type": "object",
          "properties": {
            "res": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Resource"
              }
            }
          }
        },
        "SearchArgument": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "operator": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "logicalType": {
              "type": "string"
            }
          }
        },
        "SearchArguments": {
          "type": "object",
          "properties": {
            "argument": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SearchArgument"
              }
            }
          }
        },
        "SearchQueries": {
          "type": "object",
          "properties": {
            "queries": {
              "$ref": "#/components/schemas/SearchQueriesInner"
            }
          }
        },
        "SearchQueriesInner": {
          "type": "object",
          "properties": {
            "query": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SearchQuery"
              }
            }
          },
          "xml": {
            "name": "queries",
            "namespace": "http://infor.com/daf"
          }
        },
        "SearchQuery": {
          "type": "object",
          "properties": {
            "entities": {
              "type": "string"
            },
            "useTextSearch": {
              "type": "boolean"
            },
            "arguments": {
              "$ref": "#/components/schemas/SearchArguments"
            }
          }
        },
        "SerializableDocument": {
          "type": "object",
          "properties": {
            "files": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                  "type": "string",
                  "format": "byte"
                }
              }
            },
            "document": {
              "$ref": "#/components/schemas/Document"
            }
          }
        },
        "SheetDefinition": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "lists": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ListDefinition"
              }
            }
          }
        },
        "SignHereTab": {
          "type": "object",
          "properties": {
            "position": {
              "$ref": "#/components/schemas/TabPosition"
            },
            "options": {
              "$ref": "#/components/schemas/TabOptions"
            }
          }
        },
        "SignatureEnvelope": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "recipients": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Recipient"
              }
            },
            "contents": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Content"
              }
            },
            "subject": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "SignatureTabs": {
          "type": "object",
          "properties": {
            "signHereTabs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SignHereTab"
              }
            },
            "initialHereTabs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InitialHereTab"
              }
            },
            "fullNameTabs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FullNameTab"
              }
            },
            "dateSignedTabs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DateSignedTab"
              }
            }
          }
        },
        "SignatureTarget": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ITarget"
            },
            {
              "type": "object",
              "properties": {
                "include": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "envelope": {
                  "$ref": "#/components/schemas/SignatureEnvelope"
                }
              }
            }
          ]
        },
        "StatusResult": {
          "type": "object",
          "properties": {
            "jobId": {
              "type": "string",
              "readOnly": true
            },
            "status": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "pending",
                "ok",
                "fail",
                "inProgress",
                "terminated"
              ]
            },
            "createdUTC": {
              "type": "string",
              "readOnly": true
            },
            "timeToComplete": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "timeFromSubmit": {
              "type": "integer",
              "format": "int64"
            },
            "phase": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "validate",
                "retrieveIdmDocuments",
                "generate",
                "assemble",
                "distribute"
              ]
            },
            "errorMessage": {
              "type": "string",
              "readOnly": true
            },
            "targets": {
              "type": "array",
              "readOnly": true,
              "items": {
                "$ref": "#/components/schemas/TargetStatus"
              }
            },
            "extendedInfo": {
              "$ref": "#/components/schemas/ExtendedInfo"
            }
          }
        },
        "SubmitJob": {
          "type": "object",
          "properties": {
            "input": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IFile"
              }
            },
            "targets": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ITarget"
              }
            },
            "batchId": {
              "type": "string"
            },
            "largeJob": {
              "type": "boolean"
            }
          }
        },
        "SubmitResult": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "readOnly": true
            },
            "jobId": {
              "type": "string",
              "readOnly": true
            },
            "errorMessage": {
              "type": "string",
              "readOnly": true
            }
          }
        },
        "TabOptions": {
          "type": "object",
          "properties": {
            "tabLabel": {
              "type": "string"
            },
            "tabOrder": {
              "type": "integer",
              "format": "int32"
            },
            "width": {
              "type": "integer",
              "format": "int32"
            },
            "height": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "TabPosition": {
          "type": "object",
          "properties": {
            "xPosition": {
              "type": "integer",
              "format": "int32"
            },
            "yPosition": {
              "type": "integer",
              "format": "int32"
            },
            "anchorUse": {
              "type": "boolean"
            },
            "anchorString": {
              "type": "string"
            },
            "anchorUnits": {
              "type": "string"
            },
            "anchorXOffset": {
              "type": "integer",
              "format": "int32"
            },
            "anchorYOffset": {
              "type": "integer",
              "format": "int32"
            },
            "anchorHorizontalAlignment": {
              "type": "string"
            },
            "anchorMatchWholeWord": {
              "type": "boolean"
            },
            "anchorCaseSensitive": {
              "type": "boolean"
            },
            "anchorIgnoreIfNotPresent": {
              "type": "boolean"
            },
            "pageNumber": {
              "type": "integer",
              "format": "int32"
            },
            "documentId": {
              "type": "string"
            }
          }
        },
        "TargetStatus": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "email",
                "print",
                "item",
                "signature"
              ]
            },
            "id": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "pending",
                "ok",
                "fail",
                "inProgress",
                "terminated"
              ]
            },
            "description": {
              "type": "string"
            },
            "time": {
              "type": "integer",
              "format": "int64"
            },
            "documentInformation": {
              "type": "array",
              "readOnly": true,
              "items": {
                "$ref": "#/components/schemas/DocumentInformation"
              }
            },
            "internalId": {
              "type": "string"
            }
          }
        },
        "TypeInfo": {
          "type": "object",
          "properties": {
            "typeNamespace": {
              "type": "string"
            },
            "typeName": {
              "type": "string"
            }
          }
        },
        "UpdateItem": {
          "type": "object",
          "properties": {
            "item": {
              "$ref": "#/components/schemas/UpdateItemInner"
            }
          }
        },
        "UpdateItemInner": {
          "type": "object",
          "properties": {
            "attrs": {
              "$ref": "#/components/schemas/Attributes"
            },
            "resrs": {
              "$ref": "#/components/schemas/Resources"
            },
            "acl": {
              "$ref": "#/components/schemas/AccessControlList"
            },
            "pid": {
              "type": "string"
            }
          },
          "xml": {
            "name": "item",
            "namespace": "http://infor.com/daf"
          }
        },
        "UpdateVersion": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "merge": {
              "type": "boolean"
            }
          }
        }
      },
      "securitySchemes":{
          "noscope_auth":{
              "type":"oauth2",
              "flows":{
                  "implicit":{
                      "authorizationUrl":"https://mingle-sso.inforcloudsuite.com:443/DEVMRKT_DEV/as/authorization.oauth2",
                      "scopes":{}
                  }
              }
          }
      }
    }
  }